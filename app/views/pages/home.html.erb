<div class="container">
  <div class="row">
    <div class="col-xs-12">
      <%= render partial: 'shared/banner', locals: {
        primary_header: "Space Station",
        secondary_header: "Discover and source from the world's most exotic and talented fashion designers",
        image: "https://sixtiescity.net/Fashion/stuff2102.jpg",
        banner_size: "full"
      } %>

    </div>
  </div>
</div>


<div class="container">
  <div class="row">
<!--     <h1 class="text-center highlight-header">About us</h1>
 -->    <div class="col-xs-12 col-lg-6">
      <div class="sub-buyer">
        <%= image_tag 'space-station-icon' %>
        <h3> Buyers, </h3>
        <p>
          Discover, connect and source from the worlds’s most creative and talented fashion designers. The station gives you access to an exhaustive range designer linesheets with wholesale prices. You can connect with designers, pre-order and re-order collection items anytime from anywhere. Access virtual showrooms, with full product views and information. At the station all orders statuses are up to date and easily manageable. Our features enable you to prepare seasonal plans which you save and share. We're not done yet! We have built in analytics to help you make accurate analysis of previous orders and enhance your upcoming order plans!
        </p>
      </div>
    </div>

    <div class="col-xs-12 col-lg-6">
      <div class="sub-designer">
        <%= image_tag 'space-station-icon' %>

        <h3> Designers, </h3>
        <p>
          Let’s get you out to <em>space</em>, where you will be much appreciated. The far corners long for your fresh and creative art! Upload collections and update product information. Set your prices,  and preferences and connect with retailers across space. Receive and manage pre-orders and-re orders and update order statuses. The station's features enable you to make accurate production projections and have real-time re-order info. We order everything for you! Have all your client information and preferances all in one place. The space also gives you clear and concise analytics to better understand and optimize your business!
        </p>

      </div>
    </div>
  </div>
</div>

<div class="container">
  <div class="row">
    <div class="col-xs-12">
      <h1 class="text-center highlight-header">Featured Designers</h1>
    </div>
  </div>
  <div class="row">
    <% @designers.sample(6).each do |d| %>
    <div class="col-xs-12 col-md-4">
      <%= render 'shared/designercard', designer: d %>
    </div>
    <% end %>
  </div>
</div>

<div class="container all-btn">
  <%= link_to "Checkout More", designers_path, class: "btn-space-station" %>
</div>

<div class="gray-wrapper">
  <div id="map" style="width: 100%; height: 600px;"></div>
</div>
<% content_for(:after_js) do %>
<script>
  var handler = Gmaps.build('Google');
  var styles = [
  {
    "featureType": "all",
    "elementType": "geometry",
    "stylers": [
    {
      "color": "#ffffff"
    }
    ]
  },
  {
    "featureType": "all",
    "elementType": "labels.text.fill",
    "stylers": [
    {
      "gamma": 0.01
    },
    {
      "lightness": 20
    }
    ]
  },
  {
    "featureType": "all",
    "elementType": "labels.text.stroke",
    "stylers": [
    {
      "saturation": -31
    },
    {
      "lightness": -33
    },
    {
      "weight": 2
    },
    {
      "gamma": 0.8
    }
    ]
  },
  {
    "featureType": "all",
    "elementType": "labels.icon",
    "stylers": [
    {
      "visibility": "off"
    }
    ]
  },
  {
    "featureType": "administrative",
    "elementType": "all",
    "stylers": [
    {
      "visibility": "off"
    }
    ]
  },
  {
    "featureType": "administrative",
    "elementType": "geometry",
    "stylers": [
    {
      "visibility": "off"
    }
    ]
  },
  {
    "featureType": "administrative",
    "elementType": "labels",
    "stylers": [
    {
      "visibility": "off"
    }
    ]
  },
  {
    "featureType": "administrative.country",
    "elementType": "all",
    "stylers": [
    {
      "visibility": "off"
    }
    ]
  },
  {
    "featureType": "administrative.province",
    "elementType": "all",
    "stylers": [
    {
      "visibility": "off"
    }
    ]
  },
  {
    "featureType": "administrative.locality",
    "elementType": "all",
    "stylers": [
    {
      "visibility": "off"
    }
    ]
  },
  {
    "featureType": "administrative.neighborhood",
    "elementType": "all",
    "stylers": [
    {
      "visibility": "off"
    }
    ]
  },
  {
    "featureType": "administrative.land_parcel",
    "elementType": "all",
    "stylers": [
    {
      "visibility": "off"
    }
    ]
  },
  {
    "featureType": "landscape",
    "elementType": "all",
    "stylers": [
    {
      "visibility": "simplified"
    }
    ]
  },
  {
    "featureType": "landscape",
    "elementType": "geometry",
    "stylers": [
    {
      "lightness": 30
    },
    {
      "saturation": 30
    }
    ]
  },
  {
    "featureType": "landscape",
    "elementType": "labels.text",
    "stylers": [
    {
      "visibility": "off"
    }
    ]
  },
  {
    "featureType": "landscape.man_made",
    "elementType": "labels.text",
    "stylers": [
    {
      "visibility": "on"
    }
    ]
  },
  {
    "featureType": "poi",
    "elementType": "all",
    "stylers": [
    {
      "visibility": "off"
    }
    ]
  },
  {
    "featureType": "poi",
    "elementType": "geometry",
    "stylers": [
    {
      "saturation": 20
    }
    ]
  },
  {
    "featureType": "poi.park",
    "elementType": "geometry",
    "stylers": [
    {
      "lightness": 20
    },
    {
      "saturation": -20
    }
    ]
  },
  {
    "featureType": "road",
    "elementType": "all",
    "stylers": [
    {
      "visibility": "off"
    }
    ]
  },
  {
    "featureType": "road",
    "elementType": "geometry",
    "stylers": [
    {
      "lightness": 10
    },
    {
      "saturation": -30
    }
    ]
  },
  {
    "featureType": "road",
    "elementType": "geometry.stroke",
    "stylers": [
    {
      "saturation": 25
    },
    {
      "lightness": 25
    }
    ]
  },
  {
    "featureType": "transit",
    "elementType": "all",
    "stylers": [
    {
      "visibility": "off"
    }
    ]
  },
  {
    "featureType": "water",
    "elementType": "all",
    "stylers": [
    {
      "lightness": -20
    }
    ]
  },
  {
    "featureType": "water",
    "elementType": "geometry",
    "stylers": [
    {
      "visibility": "on"
    }
    ]
  },
  {
    "featureType": "water",
    "elementType": "labels",
    "stylers": [
    {
      "visibility": "off"
    }
    ]
  }
  ]


  handler.buildMap({
    provider: {
      styles: styles,
      // zoomControl: false,
      // zoom: 1,
      gestureHandling: "none"
        // pass in other Google Maps API options here
        // => https://developers.google.com/maps/documentation/javascript/reference#MapOptions

      },
      internal: { id: 'map' }
    }, function() {

      markers = handler.addMarkers(<%= raw @hash.to_json %>);
      handler.bounds.extendWith(markers);
      handler.fitMapToBounds();

      if (markers.length == 0) {
        handler.getMap().setZoom(1);
      } else if (markers.length == 1) {
        handler.getMap().setZoom(14);
      }
    });
  </script>
  <% end %>




