<div class="container">
  <div class="row">
    <div class="col-xs-12">
      <%= render partial: 'shared/banner', locals: {
        primary_header: "Space Station",
        secondary_header: "Discover and source from the world's most exotic and talented fashion designers",
        image: "https://sixtiescity.net/Fashion/stuff2102.jpg",
        banner_size: "full"
      } %>

    </div>
  </div>
</div>


<div class="container">
  <div class="row row-relative">
<!--     <h1 class="text-center highlight-header">About us</h1>
 -->    <div class="col-xs-12 col-lg-6">
      <div class="sub-buyer">
        <h3> Buyers, </h3>
        <ul>
          <li>Discover and connect with designers globally</li>
          <li>Access virtual showrooms, linesheets and wholesale prices</li>
          <li>Prepare and share season plans</li>
          <li>Place orders and re-orders easily - anytime, anywhere</li>
          <li>Get real-time order status updates</li>
          <li>Have all your data organised in one place and get accurate analytics</li>
          <li>Simple integration with your POS system </li>
        </ul>
      </div>
    </div>

    <div class="col-xs-12 col-lg-6">
      <div class="sub-designer">

        <h3> Designers, </h3>
        <ul>
          <li>Access a global network of retailers</li>
          <li>Receive invitations and showcase your products beautifully</li>
          <li>Set your prices, conditions and preferences</li>
          <li>Receive and manage pre-orders and re-orders</li>
          <li>Make accurate production projections</li>
          <li>Have all your data in details and perfect order turned into clear analytics</li>
        </ul>

      </div>
    </div>
            <%= image_tag 'space-station-icon', class: "image-absolute-center" %>
  </div>
</div>

<div class="container">
  <div class="row">
    <div class="col-xs-12">
      <h1 class="text-center highlight-header">Featured Designers</h1>
    </div>
  </div>
  <div class="row">
    <% @designers.sample(6).each do |d| %>
    <div class="col-xs-12 col-md-4">
      <%= render 'shared/designercard', designer: d %>
    </div>
    <% end %>
  </div>
</div>

<div class="container all-btn">
  <%= link_to "Checkout More", designers_path, class: "btn-space-station" %>
</div>

<div class="gray-wrapper">
  <div id="map" style="width: 100%; height: 600px;"></div>
</div>
<% content_for(:after_js) do %>
<script>
  var handler = Gmaps.build('Google');
  var styles = [
  {
    "featureType": "all",
    "elementType": "geometry",
    "stylers": [
    {
      "color": "#ffffff"
    }
    ]
  },
  {
    "featureType": "all",
    "elementType": "labels.text.fill",
    "stylers": [
    {
      "gamma": 0.01
    },
    {
      "lightness": 20
    }
    ]
  },
  {
    "featureType": "all",
    "elementType": "labels.text.stroke",
    "stylers": [
    {
      "saturation": -31
    },
    {
      "lightness": -33
    },
    {
      "weight": 2
    },
    {
      "gamma": 0.8
    }
    ]
  },
  {
    "featureType": "all",
    "elementType": "labels.icon",
    "stylers": [
    {
      "visibility": "off"
    }
    ]
  },
  {
    "featureType": "administrative",
    "elementType": "all",
    "stylers": [
    {
      "visibility": "off"
    }
    ]
  },
  {
    "featureType": "administrative",
    "elementType": "geometry",
    "stylers": [
    {
      "visibility": "off"
    }
    ]
  },
  {
    "featureType": "administrative",
    "elementType": "labels",
    "stylers": [
    {
      "visibility": "off"
    }
    ]
  },
  {
    "featureType": "administrative.country",
    "elementType": "all",
    "stylers": [
    {
      "visibility": "off"
    }
    ]
  },
  {
    "featureType": "administrative.province",
    "elementType": "all",
    "stylers": [
    {
      "visibility": "off"
    }
    ]
  },
  {
    "featureType": "administrative.locality",
    "elementType": "all",
    "stylers": [
    {
      "visibility": "off"
    }
    ]
  },
  {
    "featureType": "administrative.neighborhood",
    "elementType": "all",
    "stylers": [
    {
      "visibility": "off"
    }
    ]
  },
  {
    "featureType": "administrative.land_parcel",
    "elementType": "all",
    "stylers": [
    {
      "visibility": "off"
    }
    ]
  },
  {
    "featureType": "landscape",
    "elementType": "all",
    "stylers": [
    {
      "visibility": "simplified"
    }
    ]
  },
  {
    "featureType": "landscape",
    "elementType": "geometry",
    "stylers": [
    {
      "lightness": 30
    },
    {
      "saturation": 30
    }
    ]
  },
  {
    "featureType": "landscape",
    "elementType": "labels.text",
    "stylers": [
    {
      "visibility": "off"
    }
    ]
  },
  {
    "featureType": "landscape.man_made",
    "elementType": "labels.text",
    "stylers": [
    {
      "visibility": "on"
    }
    ]
  },
  {
    "featureType": "poi",
    "elementType": "all",
    "stylers": [
    {
      "visibility": "off"
    }
    ]
  },
  {
    "featureType": "poi",
    "elementType": "geometry",
    "stylers": [
    {
      "saturation": 20
    }
    ]
  },
  {
    "featureType": "poi.park",
    "elementType": "geometry",
    "stylers": [
    {
      "lightness": 20
    },
    {
      "saturation": -20
    }
    ]
  },
  {
    "featureType": "road",
    "elementType": "all",
    "stylers": [
    {
      "visibility": "off"
    }
    ]
  },
  {
    "featureType": "road",
    "elementType": "geometry",
    "stylers": [
    {
      "lightness": 10
    },
    {
      "saturation": -30
    }
    ]
  },
  {
    "featureType": "road",
    "elementType": "geometry.stroke",
    "stylers": [
    {
      "saturation": 25
    },
    {
      "lightness": 25
    }
    ]
  },
  {
    "featureType": "transit",
    "elementType": "all",
    "stylers": [
    {
      "visibility": "off"
    }
    ]
  },
  {
    "featureType": "water",
    "elementType": "all",
    "stylers": [
    {
      "lightness": -20
    }
    ]
  },
  {
    "featureType": "water",
    "elementType": "geometry",
    "stylers": [
    {
      "visibility": "on"
    }
    ]
  },
  {
    "featureType": "water",
    "elementType": "labels",
    "stylers": [
    {
      "visibility": "off"
    }
    ]
  }
  ]


  handler.buildMap({
    provider: {
      styles: styles,
      // zoomControl: false,
      // zoom: 1,
      gestureHandling: "none"
        // pass in other Google Maps API options here
        // => https://developers.google.com/maps/documentation/javascript/reference#MapOptions

      },
      internal: { id: 'map' }
    }, function() {

      markers = handler.addMarkers(<%= raw @hash.to_json %>);
      handler.bounds.extendWith(markers);
      handler.fitMapToBounds();

      if (markers.length == 0) {
        handler.getMap().setZoom(1);
      } else if (markers.length == 1) {
        handler.getMap().setZoom(14);
      }
    });
  </script>
  <% end %>




